{"version":3,"sources":["features/timer/Timer.module.scss","components/Round/Round.module.scss","components/Contestant/Contestant.module.scss","features/clock/Clock.module.scss","constants/bouts.ts","app/hooks.ts","constants/infoText.ts","constants/colors.ts","features/clock/clockSlice.ts","features/info/infoSlice.ts","features/roundCounter/roundCounterSlice.ts","features/timer/timerSlice.ts","components/CustomColorPicker/CustomColorPicker.tsx","components/GUI/GUI.tsx","features/info/Info.tsx","assets/ufc-logo.svg","components/Logo/Logo.tsx","components/Round/Round.tsx","features/roundCounter/RoundCounter.tsx","features/clock/Clock.tsx","components/Contestant/Contestant.tsx","features/timer/Timer.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","components/GUI/GUI.module.scss","features/info/Info.module.scss","components/Logo/Logo.module.scss","features/roundCounter/RoundCounter.module.scss"],"names":["module","exports","BOUTS","useAppDispatch","useDispatch","useAppSelector","useSelector","INFOTEXT","COLORS","BLACK","code","name","textColor","BLUE","GOLD","GREEN","RED","WHITE","YELLOW","clockSlice","createSlice","initialState","minutes","reducers","setClockTime","state","action","payload","selectClockTime","clock","actions","bout","LIGHTWEIGHT","message","TRUNK_COLOR","infoSlice","setBout","setMessage","selectBout","info","selectMessage","roundCounterSlice","rounds","activeRound","setActiveRound","setRoundsCount","setRoundCounter","selectActiveRound","roundCounter","selectRoundsCounter","selectRoundsCount","contestants","champion","color","id","lastName","rank","timerSlice","setContestantsColors","chosenColor","Object","values","find","undefined","targetIndex","updateContestants","selectContestants","timer","CustomColorPicker","index","props","data-index","GUI","dispatch","bouts","currentBout","infoMessage","roundsCount","data","colorEntries","colors","map","colorElement","cardStyles","backgroundColor","justifyContent","margin","marginLeft","padding","paddingLeft","paddingRight","handleSwatchHover","targetColor","event","target","colorEl","hex","targetElement","title","handleColorChange","parentTarget","closest","dataset","parsedTargetIndex","parseInt","console","log","className","styles","gui","labelWidth","onUpdate","newData","diffs","updatedDiff","keys","style","zIndex","conditionalRankElement","label","path","min","max","step","closed","onSwatchHover","circlePicker","circleSpacing","circleSize","default","card","width","onChange","options","Info","_path","refInfoBox","useRef","refInfoText","timelineOptions","defaults","duration","ease","createTl","useCallback","text","tl","gsap","timeline","includes","set","current","fromTo","rotateX","y","to","eventCallback","showTrunkInfo","showBoutInfo","useEffect","infoBox","ref","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgUfcLogo","_ref","svgRef","titleId","viewBox","d","ForwardRef","Logo","refLogo","refLogokWrapper","showLogo","hideLogoWrapperBackground","backgroundImage","left","x","showLogoWrapperBackground","clearProps","clientWidth","ufcLogoWrapper","ufcLogo","Round","roundsArr","refRoundContainer","showRounds","roundContainerEl","roundsWrapperEl","getElementsByClassName","roundWrapper","roundsEl","round","activeRoundEl","roundActive","completedRounds","roundComplete","bottom","height","transformOrigin","filter","autoAlpha","isRoundCompletedModifier","roundModifier","roundJSX","push","roundContainer","RoundCounter","activeRoundLabel","refRoundNumber","showCurrentRound","roundCounterWrapper","roundNumber","Clock","refClock","refCountdown","showClock","showCountdown","renderer","time","zeroPad","separator","seconds","clockWrapper","date","Date","now","Contestant","isSecond","refContestant","refColor","refColorSign","refColorText","refText","refTextBlock","contestant","textStyles","colorBlockStyles","modifierClass","colorSignSecond","ranking","container","textWrapper","colorSign","colorText","Timer","firstContestant","firstContestantColor","firstContestantColorSign","firstContestantColorText","firstContestantText","firstContestantTextBlock","secondContestant","secondContestantColor","secondContestantColorSign","secondContestantColorText","secondContestantText","secondContestantTextBlock","master","getById","add","addLabel","blink","showTrunkColors","hideTrunkColors","App","store","configureStore","reducer","clockReducer","infoReducer","timerReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yCCA1BD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,iBAAiB,8BAA8B,eAAiB,8BAA8B,aAAe,4BAA4B,cAAgB,+B,mBCAjPD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,UAAY,8BAA8B,gBAAkB,oCAAoC,UAAY,8BAA8B,UAAY,8BAA8B,WAAa,+BAA+B,KAAO,yBAAyB,aAAe,iCAAiC,YAAc,kC,mBCAlXD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,KAAO,oBAAoB,UAAY,2B,4CCD5HC,E,4ECIQC,EAAiB,kBAAMC,eACvBC,EAAkDC,K,SDL1DJ,K,+BAAAA,E,2BAAAA,E,iCAAAA,E,mCAAAA,E,+BAAAA,E,iCAAAA,E,iCAAAA,E,2CAAAA,E,gCAAAA,M,KAYUA,IEZVK,EFYUL,IG0CAM,EA5CQ,CACrBC,MAAO,CACLC,KAAM,UACNC,KAAM,QACNC,UAAW,QAGbC,KAAM,CACJH,KAAM,UACNC,KAAM,OACNC,UAAW,QAGbE,KAAM,CACJJ,KAAM,UACNC,KAAM,OACNC,UAAW,QAGbG,MAAO,CACLL,KAAM,UACNC,KAAM,QACNC,UAAW,QAGbI,IAAK,CACHN,KAAM,UACNC,KAAM,MACNC,UAAW,QAGbK,MAAO,CACLP,KAAM,UACNC,KAAM,QACNC,UAAW,QAGbM,OAAQ,CACNR,KAAM,UACNC,KAAM,SACNC,UAAW,S,QCrCFO,EAAaC,YAAY,CACpCT,KAAM,QACNU,aAN+B,CAC/BC,QAAS,GAMTC,SAAU,CACRC,aAAc,SAACC,EAAOC,GACpBD,EAAMH,QAAUI,EAAOC,YAKhBC,EAAkB,SAACH,GAAD,OAA8BA,EAAMI,MAAMP,SAE1DE,EAAiBL,EAAWW,QAA5BN,aAEAL,IAAf,S,SF3BKZ,K,2BAAAA,M,KAIUA,QGSTc,EAA0B,CAC9BU,KAAM7B,EAAM8B,YACZC,QAAS1B,EAAS2B,aAGPC,EAAYf,YAAY,CACnCT,KAAM,OACNU,eACAE,SAAU,CACRa,QAAS,SAACX,EAAOC,GACfD,EAAMM,KAAOL,EAAOC,SAEtBU,WAAY,SAACZ,EAAOC,GAClBD,EAAMQ,QAAUP,EAAOC,YAKhBW,EAAa,SAACb,GAAD,OAA6BA,EAAMc,KAAKR,MACrDS,EAAgB,SAACf,GAAD,OAAgCA,EAAMc,KAAKN,SAEjE,EAAgCE,EAAUL,QAAlCM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAETF,IAAf,QCfaM,EAAoBrB,YAAY,CAC3CT,KAAM,eACNU,aAPsC,CACtCqB,OAAQ,EACRC,YAAa,GAMbpB,SAAU,CACRqB,eAAgB,SAACnB,EAAOC,GACtBD,EAAMkB,YAAcjB,EAAOC,QAAQgB,aAGrCE,eAAgB,SAACpB,EAAOC,GACtBD,EAAMiB,OAAShB,EAAOC,QAAQe,QAGhCI,gBAAiB,SAACrB,EAAOC,GACvBD,EAAMkB,YAAcjB,EAAOC,QAAQgB,YACnClB,EAAMiB,OAAShB,EAAOC,QAAQe,WAKvBK,EAAoB,SAACtB,GAChC,MAAgCA,EAAMuB,aAA9BL,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,OACrB,OAAOC,EAAcD,EAASA,EAASC,GAG5BM,EAAsB,SAACxB,GAAD,OAAyCA,EAAMuB,cACrEE,EAAoB,SAACzB,GAAD,OAA8BA,EAAMuB,aAAaN,QAE3E,EAA4DD,EAAkBX,QAAtCgB,GAAxC,EAAQF,eAAR,EAAwBC,eAAxB,EAAwCC,iBAEhCL,IAAf,QC1BMpB,EAA2B,CAC/B8B,YAAa,CACX,CACEC,UAAU,EACVC,MAAO7C,EAAOQ,IACdsC,GAAI,EACJC,SAAU,cACVC,KAAM,GAER,CACEJ,UAAU,EACVC,MAAO7C,EAAOK,KACdyC,GAAI,EACJC,SAAU,cACVC,KAAM,KAKCC,EAAarC,YAAY,CACpCT,KAAM,QACNU,eACAE,SAAU,CACRmC,qBAAsB,SAACjC,EAAOC,GAC5B,IACMiC,EADeC,OAAOC,OAAOrD,GACFsD,MAAK,SAACT,GAAD,OAAWA,EAAM3C,OAASgB,EAAOC,QAAQ0B,cAC3DU,IAAhBJ,IACFlC,EAAM0B,YAAYzB,EAAOC,QAAQqC,aAAaX,MAAQM,IAI1DM,kBAAmB,SAACxC,EAAOC,GACzBD,EAAM0B,YAAczB,EAAOC,YAMpBuC,EAAoB,SAACzC,GAAD,OAAwCA,EAAM0C,MAAMhB,aAE9E,EAAoDM,EAAW3B,QAAvD4B,EAAR,EAAQA,qBAAsBO,EAA9B,EAA8BA,kBAEtBR,IAAf,Q,iCCjDeW,MARf,YAAyE,IAA5CC,EAA2C,EAA3CA,MAAUC,EAAiC,yBACtE,OACE,qBAAKC,aAAYF,EAAjB,SACE,cAAC,IAAD,eAAkBC,O,0BCyITE,MA9Hf,WACE,IAEMC,EAAWtE,IACXuE,EAAQd,OAAOC,OAAO3D,GACtByC,EAActC,EAAe0C,GAC7BI,EAAc9C,EAAe6D,GAC7BS,EAActE,EAAeiC,GAC7BsC,EAAcvE,EAAemC,GAC7BqC,EAAcxE,EAAe6C,GAG7B4B,EAAkB,CACtBjD,MAAO,CAAEP,QAHOjB,EAAeuB,IAI/BW,KAAM,CAAER,KAAM4C,EAAa1C,QAAS2C,GACpC5B,aAAc,CAAEL,cAAaD,OAAQmC,GACrCV,MAAO,CAAEhB,gBAGL4B,EAAenB,OAAOC,OAAOrD,GAC7BwE,EAASD,EAAaE,KAAI,SAACC,GAAD,OAAkBA,EAAaxE,QACzDyE,EAAkC,CACtCC,gBAAiB,QACjBC,eAAgB,eAChBC,OAAQ,EACRC,WAAY,OACZC,QAAS,OACTC,YAAa,OACbC,aAAc,QAGVC,EAAoB,SAACC,EAA0BC,GACnD,IAAMC,EAASf,EAAajB,MAAK,SAACiC,GAAD,OAAaA,EAAQrF,OAASkF,EAAYI,OAC3E,QAAejC,IAAX+B,EAAsB,CACxB,IAAMG,EAAgBJ,EAAMC,OACxBG,EAAcC,QAAUJ,EAAOnF,OAAMsF,EAAcC,MAAQJ,EAAOnF,QAIpEwF,EAAoB,SAAC9C,EAAoBwC,GAC7C,IAAMO,EAAeP,EAAMC,OAAOO,QAvCN,gBAwCtBrC,EAAW,OAAGoC,QAAH,IAAGA,OAAH,EAAGA,EAAcE,QAAQjC,MAC1C,QAAoBN,IAAhBC,EAA2B,CAC7B,IAAMuC,EAAoBC,SAASxC,EAAa,IAC1CrC,EAAU,CACd0B,MAAOA,EAAM2C,IACbhC,YAAauC,GAEfE,QAAQC,IAAI/E,GAEZ8C,EAASf,EAAqB/B,MA8DlC,OACE,eAAC,IAAD,CAAQgF,UAAWC,IAAOC,IAAK/B,KAAMA,EAAMgC,WAAW,MAAMC,SAxBzC,SAACC,GACpB,IAAMC,EAAQC,sBAAYpC,EAAMkC,GAChCP,QAAQC,IAAIO,GACZ,MAA0BrD,OAAOuD,KAAKF,GACtC,OADA,qBAEE,IAAK,QACHxC,EAASR,EAAkB+C,EAAQ7C,MAAMhB,cACzC,MACF,IAAK,QACHsB,EAASjD,EAAawF,EAAQnF,MAAMP,UACpC,MACF,IAAK,OACHmD,EAASrC,EAAQ4E,EAAQzE,KAAKR,OAC9B,MACF,IAAK,eACH0C,EAAS3B,EAAgBkE,EAAQhE,iBAS+CoE,MAAO,CAAEC,OAAQ,KAArG,UACGlE,EAAY8B,KA5DkB,SAAC,EAAwBZ,GAAmB,IAAzCf,EAAwC,EAAxCA,GAC9BgE,GAAoE,IAA3CxC,EAAKX,MAAMhB,YAAYkB,GAAOjB,SACzD,cAAC,IAAD,CAAWmE,MAAM,OAAOC,KAAI,4BAAuBnD,EAAvB,UAAsCoD,IAAK,EAAGC,IAAK,GAAIC,KAAM,IACzF,6BAEJ,OACE,eAAC,IAAD,CACEC,QAAQ,EAER1B,MAAK,oBAAe7B,EAAQ,GAH9B,UAKE,cAAC,IAAD,CAAWkD,MAAM,OAAOC,KAAI,4BAAuBnD,EAAvB,gBAC5B,cAAC,IAAD,CAAYkD,MAAM,WAAWC,KAAI,4BAAuBnD,EAAvB,gBAChCiD,EACD,cAAC,IAAD,CAAWpB,MAAM,cAAc0B,QAAM,EAArC,SACE,cAAC,EAAD,CACEC,cAAelC,EACfX,OAAQA,EACR2B,UAAWC,IAAOkB,aAClBC,cAAe,GACfC,WAAY,GACZ3D,MAAOA,EACPuC,OAAQ,CACNqB,QAAS,CACPC,KAAM/C,IAGVgD,MAAM,OACNC,SAAUjC,QApBT7C,MAsDP,eAAC,IAAD,CAAW4C,MAAM,gBAAgB0B,QAAQ,EAAzC,UACE,cAAC,IAAD,CAAWL,MAAM,mBAAmBC,KAAK,gBAAgBC,IAAK,EAAGC,IAAK,EAAGC,KAAM,IAC/E,cAAC,IAAD,CAAWJ,MAAM,SAASC,KAAK,sBAAsBC,IAAK,EAAGC,IAAK,EAAGC,KAAM,IAC3E,cAAC,IAAD,CAAWJ,MAAM,eAAeC,KAAK,2BAA2BC,IAAK,EAAGC,IAAK7C,EAAa8C,KAAM,IAChG,cAAC,IAAD,CAAWJ,MAAM,WAAWC,KAAK,YAAYa,QAAS3D,W,oCClE/C4D,IC7EXC,GD6EWD,GA7Df,WACE,IAAM7D,EAAWtE,IACXwE,EAActE,EAAeiC,GAC7BsC,EAAcvE,EAAemC,GAC7BgG,EAAaC,iBAAuB,MACpCC,EAAcD,iBAAwB,MAEtCE,EAAqC,CACzCC,SAAU,CACRC,SAAU,MACVC,KAAM,iBAIJC,EAAWC,uBAAY,YAEA,IAD3BH,EAC0B,EAD1BA,SAAUvF,EACgB,EADhBA,GAAI2F,EACY,EADZA,KAERC,EAAKC,IAAKC,SAAL,aAAgB9F,MAAOqF,IAiBlC,OAfI/E,OAAOC,OAAO3D,GAAOmJ,SAASJ,IAChCC,EAAGI,IAAId,EAAWe,QAAS,CAAEpB,MAAO,gBAGtCe,EACGM,OAAOhB,EAAWe,QAAS,CAAEE,QAAS,MAAQ,CAAEA,QAAS,MACzDD,OAAOd,EAAYa,QAAS,CAAEG,EAAG,QAAU,CAAEA,EAAG,MAChDC,GAAGnB,EAAWe,QAAS,CAAEE,QAAS,MAHrC,YAGkDZ,IAC/Cc,GAAGjB,EAAYa,QAAS,CAAEG,EAAG,OAAQb,SAAU,OAAS,KACxDe,cAAc,WAAW,WACpBhF,IAAgBqE,GAClBxE,EAASpC,EAAW4G,OAInBC,IACN,CAACV,EAAYE,IAEVmB,EAAgBb,uBAAY,SAACH,GAGjC,OAFWE,EAAS,CAAEF,WAAUvF,GAAI,gBAAiB2F,KAAM1I,EAAS2B,gBAGnE,CAACsG,EAAYE,IAEVoB,EAAed,uBAAY,SAACH,GAGhC,OAFWE,EAAS,CAAEF,WAAUvF,GAAI,eAAgB2F,KAAMtE,MAGzD,CAAC6D,EAAYE,IAOhB,OALAqB,qBAAU,WACRF,EAAc,GACdC,EAAa,KACZ,IAGD,qBAAKnD,UAAWC,KAAOoD,QAASC,IAAKzB,EAArC,SACE,sBAAM7B,UAAWC,KAAOrE,KAAM0H,IAAKvB,EAAnC,SAAiD9D,OCtEvD,SAASsF,KAA2Q,OAA9PA,GAAWtG,OAAOuG,QAAU,SAAUrE,GAAU,IAAK,IAAIsE,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAc3G,OAAO6G,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ1E,EAAO0E,GAAOD,EAAOC,IAAY,OAAO1E,IAA2B8E,MAAMC,KAAMR,WAEhT,SAASS,GAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEtE,EAEzF,SAAuCyE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DtE,EAAS,GAAQkF,EAAapH,OAAOuD,KAAKoD,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASE,QAAQT,IAAQ,IAAa1E,EAAO0E,GAAOD,EAAOC,IAAQ,OAAO1E,EAFxMoF,CAA8BX,EAAQQ,GAAuB,GAAInH,OAAOuH,sBAAuB,CAAE,IAAIC,EAAmBxH,OAAOuH,sBAAsBZ,GAAS,IAAKH,EAAI,EAAGA,EAAIgB,EAAiBd,OAAQF,IAAOI,EAAMY,EAAiBhB,GAAQW,EAASE,QAAQT,IAAQ,GAAkB5G,OAAO6G,UAAUY,qBAAqBV,KAAKJ,EAAQC,KAAgB1E,EAAO0E,GAAOD,EAAOC,IAAU,OAAO1E,EAMne,SAASwF,GAAWC,EAAMC,GACxB,IAAItF,EAAQqF,EAAKrF,MACbuF,EAAUF,EAAKE,QACfnH,EAAQwG,GAAyBS,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOrB,GAAS,CACtD5G,GAAI,WACJoI,QAAS,cACTzB,IAAKuB,EACL,kBAAmBC,GAClBnH,GAAQ4B,EAAqB,gBAAoB,QAAS,CAC3D5C,GAAImI,GACHvF,GAAS,KAAMqC,KAAUA,GAAqB,gBAAoB,OAAQ,CAC3EoD,EAAG,6nBAIP,IAAIC,GAA0B,aAAiBN,I,IAChC,I,kBC4CAO,OAlEf,WACE,IAAMC,EAAUrD,iBAAsB,MAChCsD,EAAkBtD,iBAAuB,MAEzCuD,EAAWhD,uBACf,WACaG,IAAKC,SAAS,CACvBR,SAAU,CACRC,SAAU,MACVC,KAAM,gBAERxF,GAAI,aAIHkG,OAAOsC,EAAQvC,QAAS,CAAEG,EAAG,SAAW,CAAEA,EAAG,SAElD,CAACoC,IAGGG,EAA4BjD,uBAChC,WACaG,IAAKC,SAAS,CACvBR,SAAU,CACRC,SAAU,OAEZvF,GAAI,8BAIHgG,IAAIyC,EAAgBxC,QAAS,CAC5B2C,gBAAiB,OAAQC,KAAM,MAAOhE,MAAO,OAAQiE,EAAG,WAG9D,CAACL,IAGGM,EAA4BrD,uBAChC,WAAO,IAAD,EACOG,IAAKC,SAAS,CACvBR,SAAU,CACRC,SAAU,OAEZvF,GAAI,8BAIHgG,IAAIyC,EAAgBxC,QAAS,CAAE+C,WAAY,oBAC3C9C,OAAOuC,EAAgBxC,QAAS,CAAEpB,MAAO,QAAU,CAAEgE,KAAM,IAAKhE,MAAK,UAAE2D,EAAQvC,eAAV,aAAE,EAAiBgD,YAAaH,EAAG,KAAO,WAEpH,CAACL,IASH,OANAhC,qBAAU,WACRiC,IACAC,IACAI,MACC,IAGD,qBAAK1F,UAAWC,KAAO4F,eAAgBvC,IAAK8B,EAA5C,SACE,cAAC,GAAD,CAASpF,UAAWC,KAAO6F,QAASxC,IAAK6B,O,oBCMhCY,OAhEf,WACE,IAAQhK,EAAWrC,EAAe4C,GAA1BP,OACFC,EAActC,EAAe0C,GAC7B4J,EAA2B,GAC3BC,EAAoBnE,iBAAuB,MAE3CoE,EAAa7D,uBAAY,WAAO,IAAD,EAClB8D,EAAqBF,EAA9BrD,QACFwD,EAAe,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAkBE,uBAAuBpG,KAAOqG,cAClEC,EAAQ,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAkBE,uBAAuBpG,KAAOuG,OAC3DC,EAAa,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAkBE,uBAAuBpG,KAAOyG,aAChEC,EAAe,iBAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAkBE,uBAAuBpG,KAAO2G,sBAAnD,QAAqE,GAEpFrE,EAAKC,IAAKC,SAAS,CACvBR,SAAU,CACRC,SAAU,MACVC,KAAM,cAERxF,GAAI,oBAGkBS,IAApBgJ,QAA8ChJ,IAAbmJ,QAA4CnJ,IAAlBqJ,GAC7DlE,EACGI,IAAIwD,EAAkB,CACrBU,OAAQ,OAAQ9D,EAAG,OAAQ+D,OAAQ,OAAQhE,QAAS,QAASiE,gBAAiB,aAE/ElE,OAAOsD,EAAkB,CAAEa,OAAQ,aAAe,CAAEA,OAAQ,cAC5DhE,GAAGmD,EAAkB,CAAErD,QAAS,QAAU,KAC1CD,OAAOsD,EAAkB,CAAEc,UAAW,GAAK,CAAEA,UAAW,GAAK,KAC7DjE,GAAGmD,EAAkB,CAAEU,OAAQ,OAAQ9D,EAAG,MAAQ,KAClDC,GAAGmD,EAAkB,CAAEW,OAAQ,KAAO,SACtCjE,OAAOuD,EAAiB,CAAEU,OAAQ,QAAU,CAAEA,OAAQ,KAAO,KAC7DjE,OAAO8D,EAAiB,CAAElI,gBAAiB,eAAiB,CAAEA,gBAAiB,OAAQ8G,gBAAiB,sDACxGvC,GAAGyD,EAAe,CAAElB,gBAAiB,kEAAoE,KACzG5C,IAAI8D,EAAe,CAAEvE,SAAU,IAAMC,KAAM,SAC3Ca,GAAGyD,EAAe,CAAEQ,UAAW,EAAG/E,SAAU,KAAQ,KACpDc,GAAGyD,EAAe,CAAEQ,UAAW,EAAG/E,SAAU,MAC5Cc,GAAGyD,EAAe,CAAEQ,UAAW,EAAG/E,SAAU,MAC5Cc,GAAGyD,EAAe,CAAEQ,UAAW,EAAG/E,SAAU,QAEhD,CAAC+D,IAEJ7C,qBAAU,WACR8C,MACC,CAACD,IAEJ,IAAK,IAAIxC,EAAI,EAAGA,EAAI1H,EAAS,EAAG0H,GAAK,EAAG,CACtC,IAAMyD,EAA2BzD,EAAIzH,EAAJ,WAAsBiE,KAAO2G,eAAkB,GAC1EO,EAAgBnL,IAAgByH,EAAhB,WAAwBxD,KAAOyG,aAAgBQ,EAC/DE,EACJ,qBAAKpH,UAAWC,KAAOqG,aAAvB,SACE,sBAAMtG,UAAS,UAAKC,KAAOuG,OAAZ,OAAoBW,MADK1D,GAI5CuC,EAAUqB,KAAKD,GAGjB,OACE,qBAAKpH,UAAWC,KAAOqH,eAAgBhE,IAAK2C,EAA5C,SACGD,K,oBClBQuB,OAzCf,WACE,MAAgC7N,EAAe4C,GAAvCN,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,OACfyL,EAAgB,gBAAYxL,EAAcD,EAASA,EAASC,GAC5DyL,EAAiB3F,iBAAwB,MAEzC4F,EAAmBrF,uBACvB,WACaG,IAAKC,SAAS,CACvBR,SAAU,CACRC,SAAU,QAEZvF,GAAI,qBAIHqG,GAAGyE,EAAe7E,QAAS,CAAEV,SAAU,MAAOC,KAAM,eAAgBY,EAAG,OACvEC,GAAGyE,EAAe7E,QAAS,CAAEqE,UAAW,GAAK,SAC7CjE,GAAGyE,EAAe7E,QAAS,CAAEqE,UAAW,IACxCjE,GAAGyE,EAAe7E,QAAS,CAAEqE,UAAW,IACxCjE,GAAGyE,EAAe7E,QAAS,CAAEqE,UAAW,IACxCjE,GAAGyE,EAAe7E,QAAS,CAAEV,SAAU,MAAOC,KAAM,eAAgBY,EAAG,QAAU,WAEtF,CAAC0E,IAOH,OAJArE,qBAAU,WACRsE,MACC,IAGD,qCACE,qBAAK1H,UAAWC,KAAO0H,oBAAvB,SACE,sBAAM3H,UAAWC,KAAO2H,YAAatE,IAAKmE,EAA1C,SACGD,MAGL,cAAC,GAAD,Q,oBC0CSK,OAtEf,WACE,IAAMC,EAAWhG,iBAAuB,MAClCiG,EAAejG,iBAAwB,MAEvCkG,EAAY3F,uBAChB,WACaG,IAAKC,SAAS,CACvBR,SAAU,CACRC,SAAU,MACVC,KAAM,gBAERxF,GAAI,cAGHgG,IAAImF,EAASlF,QAAS,CAAEkE,OAAQ,SAChCjE,OAAOiF,EAASlF,QAAS,CAAEE,QAAS,QAASC,EAAG,QAAU,CAAEZ,KAAM,YAAaW,QAAS,OAAQC,EAAG,QACnGC,GAAG8E,EAASlF,QAAS,CAAEkE,OAAQ,OAAQ/D,EAAG,MAAQ,OAEvD,CAAC+E,IAGGG,EAAgB5F,uBACpB,WACaG,IAAKC,SAAS,CACvBR,SAAU,CACRC,SAAU,MACVC,KAAM,gBAERxF,GAAI,kBAGHkG,OAAOkF,EAAanF,QAAS,CAAEqE,UAAW,GAAK,CAAEA,UAAW,EAAG/E,SAAU,QACzEW,OAAOkF,EAAanF,QAAS,CAAE6C,EAAG,QAAU,CAAEA,EAAG,QAEtD,CAACsC,IAGGG,EAAW7F,uBACf,SAAC1E,GAAD,OACE,mCACE,uBAAMqC,UAAWC,KAAOkI,KAAM7E,IAAKyE,EAAnC,UACE,sBAAM/H,UAAWC,KAAOtF,QAAxB,SAAkCyN,aAAQzK,EAAMhD,QAAS,KACzD,sBAAMqF,UAAWC,KAAOoI,UAAxB,eACA,sBAAMrI,UAAWC,KAAOqI,QAAxB,SAAkCF,aAAQzK,EAAM2K,QAAS,YAI/D,IAQF,OALAlF,qBAAU,WACR4E,IACAC,MACC,CAACH,IAGF,sBAAK9H,UAAWC,KAAO/E,MAAOoI,IAAKwE,EAAnC,UACE,cAAC,GAAD,IACA,sBAAK9H,UAAWC,KAAOsI,aAAvB,UACE,cAAC,GAAD,IACA,cAAC,KAAD,CACEC,KAAMC,KAAKC,MAAQ,IACnBR,SAAUA,OAGd,cAAC,GAAD,Q,oBCjBSS,OA7Cf,YASkC,IARhChM,EAQ+B,EAR/BA,GACAiM,EAO+B,EAP/BA,SACAC,EAM+B,EAN/BA,cACAC,EAK+B,EAL/BA,SACAC,EAI+B,EAJ/BA,aACAC,EAG+B,EAH/BA,aACAC,EAE+B,EAF/BA,QACAC,EAC+B,EAD/BA,aAKA,EAHoBxP,EAAe6D,GACEJ,MAAK,SAACgM,GAAD,OAAgBA,EAAWxM,KAAOA,KAG1EF,EADF,EACEA,SADF,IACYC,MAAS3C,EADrB,EACqBA,KAAMC,EAD3B,EAC2BA,KAAiBsI,EAD5C,EACiCrI,UAAmB2C,EADpD,EACoDA,SAAUC,EAD9D,EAC8DA,KAGxDuM,EAAa,CAAE1M,MAAO4F,GACtB+G,EAAmB,CAAE5K,gBAAiB1E,GAEtCuP,EAAgBV,EAAQ,WAAO3I,KAAOsJ,iBAAoB,GAC1DC,EAAU/M,EAAW,IAAMI,EACjC,OACE,sBAAKmD,UAAWC,KAAOkJ,WAAY7F,IAAKuF,EAAxC,UACE,sBAAK7I,UAAWC,KAAOwJ,UAAWnG,IAAK4F,EAAvC,UACE,sBAAKlJ,UAAWC,KAAOyJ,YAAapG,IAAK2F,EAAzC,UACE,sBAAMjJ,UAAWC,KAAOpD,KAAxB,SAA+B2M,IAC/B,sBAAMxJ,UAAWC,KAAOjG,KAAxB,SAA+B4C,OAEjC,sBAAMoD,UAAS,UAAKC,KAAO0J,WAAZ,OAAwBL,GAAiBhG,IAAKyF,EAActI,MAAO4I,OAEpF,qBAAKrJ,UAAWC,KAAOvD,MAAO4G,IAAKwF,EAAUrI,MAAO4I,EAApD,SACE,sBACErJ,UAAWC,KAAO2J,UAClBtG,IAAK0F,EACLvI,MAAO2I,EAHT,SAKGpP,U,qBCyGI6P,OAvJf,WACE,IAAMrN,EAAc9C,EAAe6D,GAE7BC,GADWhE,IACHsI,iBAAuB,OAE/BgI,EAAkBhI,iBAAuB,MACzCiI,EAAuBjI,iBAAuB,MAC9CkI,EAA2BlI,iBAAwB,MACnDmI,EAA2BnI,iBAAwB,MACnDoI,EAAsBpI,iBAAuB,MAC7CqI,EAA2BrI,iBAAuB,MAElDsI,EAAmBtI,iBAAuB,MAC1CuI,EAAwBvI,iBAAuB,MAC/CwI,EAA4BxI,iBAAwB,MACpDyI,EAA4BzI,iBAAwB,MACpD0I,EAAuB1I,iBAAuB,MAC9C2I,EAA4B3I,iBAAuB,MA8GzD,OAjCAsB,qBAAU,WACR,IAAMsH,EAASlI,IAAKC,SAAS,CAC3BR,SAAU,CAAEC,SAAU,IACtBvF,GAAI,WAIA2I,EAA4B9C,IAAKmI,QAAQ,6BACzCxH,EAAeX,IAAKmI,QAAQ,gBAC5B1C,EAAgBzF,IAAKmI,QAAQ,iBAC7B3C,EAAYxF,IAAKmI,QAAQ,aACzBjD,EAAmBlF,IAAKmI,QAAQ,oBAChCtF,EAAW7C,IAAKmI,QAAQ,YACxBjF,EAA4BlD,IAAKmI,QAAQ,6BACzCzE,EAAa1D,IAAKmI,QAAQ,cAC1BzH,EAAgBV,IAAKmI,QAAQ,iBAEnCD,EACGE,IAAI5C,GACJ4C,IAAI1E,EAAY,SAChB0E,IAAIlD,EAAkB,yBACtBkD,IAAItF,EAA2B,SAC/BsF,IAAIvF,EAAU,0BACduF,IArFQpI,IAAKC,SAAS,CAAER,SAAU,CAAEC,SAAU,SAE9CW,OAAOsH,EAAyBvH,QAAS,CAAE/D,QAAS,IAAK2C,MAAO,KAAO,CAAE3C,QAAS,UAAW2C,MAAO,QACpGqB,OAAO4H,EAA0B7H,QAAS,CAAE/D,QAAS,IAAK2C,MAAO,KAAO,CAAE3C,QAAS,UAAW2C,MAAO,OAAS,SAE9GqB,OAAOmH,EAAyBpH,QAAS,CAAEpB,MAAO,IAAKiE,EAAG,QAAU,CACnEvD,SAAU,MACVC,KAAM,WACNX,MAAO,OACPiE,EAAG,MAEJzC,GAAGgH,EAAyBpH,QAAS,CAAEV,SAAU,MAAOV,MAAO,MAC/DqB,OAAOyH,EAA0B1H,QAAS,CAAEpB,MAAO,IAAKiE,EAAG,OAAS,CACnEvD,SAAU,MACVC,KAAM,WACNX,MAAO,OACPiE,EAAG,KACF,SACFzC,GAAGsH,EAA0B1H,QAAS,CAAEV,SAAU,MAAOV,MAAO,KAAO,SAEvEqB,OAAOqH,EAAoBtH,QAAS,CAAEqE,UAAW,KAAO,CAAE/E,SAAU,MAAO+E,UAAW,KAAO,SAC7FpE,OAAOqH,EAAoBtH,QAAS,CAAE6C,EAAG,OAAS,CAAEtD,KAAM,aAAcD,SAAU,MAAOuD,EAAG,MAAQ,SACpG5C,OAAO2H,EAAqB5H,QAAS,CAAEqE,UAAW,KAAO,CAAE/E,SAAU,MAAO+E,UAAW,KAAO,SAC9FpE,OAAO2H,EAAqB5H,QAAS,CAAE6C,EAAG,MAAQ,CAAEtD,KAAM,aAAcD,SAAU,MAAOuD,EAAG,MAAQ,SA8D7E,KACvBmF,IAAIlF,EAA2B,KAC/BkF,IAAI3C,EAAe,SACnB2C,IArGS,WACZ,IAAMrI,EAAKC,IAAKC,SAAS,CAAER,SAAU,CAAEC,SAAU,SAQjD,OAPAK,EACGsI,SAAS,YACT7H,GAAG,CAACgH,EAAyBpH,QAAS0H,EAA0B1H,SAAU,CAAEqE,UAAW,IAAK/E,SAAU,QAAU,YAChHc,GAAG,CAACgH,EAAyBpH,QAAS0H,EAA0B1H,SAAU,CAAEqE,UAAW,IAAK/E,SAAU,SACtGc,GAAG,CAACgH,EAAyBpH,QAAS0H,EAA0B1H,SAAU,CAAEqE,UAAW,IAAK/E,SAAU,SACtGc,GAAG,CAACgH,EAAyBpH,QAAS0H,EAA0B1H,SAAU,CAAEqE,UAAW,IAAK/E,SAAU,SAElGK,EA4FAuI,GAAS,cACbF,IA3CmB,WACtB,IAAMrI,EAAKC,IAAKC,SAAS,CAAER,SAAU,CAAEC,SAAU,SAYjD,OAXAK,EACGsI,SAAS,cACT7H,GAAGgH,EAAyBpH,QAAS,CAAEV,SAAU,MAAOV,MAAO,MAAOiE,EAAG,OAAS,cAClF5C,OAAOkH,EAAqBnH,QAAS,CAAEpB,MAAO,IAAKiE,EAAG,QAAU,CAAEvD,SAAU,MAAOC,KAAM,eAAgBX,MAAO,OAAS,mBACzHwB,GAAG+G,EAAqBnH,QAAS,CAAEV,SAAU,MAAOuD,EAAG,KAAO,mBAC9D5C,OAAOoH,EAAyBrH,QAAS,CAAE6C,EAAG,QAAU,CAAEvD,SAAU,MAAOC,KAAM,eAAgBsD,EAAG,KAAO,iBAC3GzC,GAAGsH,EAA0B1H,QAAS,CAAEV,SAAU,MAAOV,MAAO,MAAOiE,EAAG,QAAU,cACpF5C,OAAOwH,EAAsBzH,QAAS,CAAEpB,MAAO,IAAKiE,EAAG,SAAW,CAAEvD,SAAU,MAAOC,KAAM,eAAgBX,MAAO,OAAS,mBAC3HwB,GAAGqH,EAAsBzH,QAAS,CAAEV,SAAU,MAAOuD,EAAG,KAAO,mBAC/D5C,OAAO0H,EAA0B3H,QAAS,CAAE6C,EAAG,SAAW,CAAEvD,SAAU,MAAOC,KAAM,eAAgBsD,EAAG,KAAO,iBAEzGlD,EA8BAwI,GAAmB,mBACvBH,IAAI1H,EAAe,OACnB0H,IAhEmB,WACtB,IAAMrI,EAAKC,IAAKC,SAAS,CAAER,SAAU,CAAEC,SAAU,MAAOC,KAAM,kBAe9D,OAdAI,EACGsI,SAAS,cACT7H,GAAGiH,EAAyBrH,QAAS,CAAE6C,EAAG,QAAU,cACpDzC,GAAG+G,EAAqBnH,QAAS,CAAE6C,EAAG,QAAU,mBAChDzC,GAAGgH,EAAyBpH,QAAS,CAAEpB,MAAO,IAAKiE,EAAG,OAAS,mBAC/DzC,GAAG+G,EAAqBnH,QAAS,CAAEpB,MAAO,KAAO,mBACjDwB,GAAGgH,EAAyBpH,QAAS,CAAE6C,EAAG,KAAO,mBAEjDzC,GAAGuH,EAA0B3H,QAAS,CAAE6C,EAAG,SAAW,cACtDzC,GAAGqH,EAAsBzH,QAAS,CAAE6C,EAAG,SAAW,mBAClDzC,GAAGsH,EAA0B1H,QAAS,CAAEpB,MAAO,IAAKiE,EAAG,QAAU,mBACjEzC,GAAGqH,EAAsBzH,QAAS,CAAEpB,MAAO,KAAO,mBAClDwB,GAAGsH,EAA0B1H,QAAS,CAAE6C,EAAG,KAAO,mBAE9ClD,EAgDAyI,GAAmB,wBACvBJ,IAAIzH,KACN,IAGD,mCACE,sBAAKnD,UAAWC,KAAOzC,MAAO8F,IAAK9F,EAAnC,UACE,cAAC,GAAD,IACChB,EAAY8B,KACX,WAASZ,GAAT,IAAGf,EAAH,EAAGA,GAAH,OACE,cAAC,GAAD,CACEA,GAAIA,EAEJiM,SAAUlL,EAAQ,EAClBmL,cAAenL,EAAQ,EAAI0M,EAAmBN,EAC9ChB,SAAUpL,EAAQ,EAAI2M,EAAwBN,EAC9ChB,aAAcrL,EAAQ,EAAI4M,EAA4BN,EACtDhB,aAActL,EAAQ,EAAI6M,EAA4BN,EACtDhB,QAASvL,EAAQ,EAAI8M,EAAuBN,EAC5ChB,aAAcxL,EAAQ,EAAI+M,EAA4BN,GAPjDxN,YCrIJsO,OATf,WACE,OACE,sBAAKjL,UAAU,MAAf,UACE,cAAC,GAAD,IACA,cAAC,EAAD,QCFOkL,GAAQC,YAAe,CAClCC,QAAS,CACPlQ,MAAOmQ,EACPzP,KAAM0P,EACNjP,aAAcA,EACdmB,MAAO+N,KCCLC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA2CN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzR,QACfmR,UAAUC,cAAcQ,YAI1B5M,QAAQC,IACN,iHAKEiM,GAAUA,EAAO5L,UACnB4L,EAAO5L,SAASiM,KAMlBvM,QAAQC,IAAI,sCAGRiM,GAAUA,EAAOW,WACnBX,EAAOW,UAAUN,WAO5BO,OAAM,SAACC,GACN/M,QAAQ+M,MAAM,4CAA6CA,MC7FjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU9B,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJ+B,SAASC,eAAe,SDanB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,mBAAwB1B,OAAOC,SAAS0B,MACpDC,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMqB,mBAAN,sBAEP5B,KAgEV,SAAiCO,EAAeC,GAE9CwB,MAAMzB,EAAO,CACX0B,QAAS,CAAE,iBAAkB,YAE5BrB,MAAK,SAACsB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYrJ,QAAQ,cAG5C2H,UAAUC,cAAc4B,MAAM1B,MAAK,SAACC,GAClCA,EAAa0B,aAAa3B,MAAK,WAC7BV,OAAOC,SAASqC,eAKpBlC,GAAgBC,EAAOC,MAG1BY,OAAM,WACL9M,QAAQC,IACN,oEAvFAkO,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCtM,QAAQC,IACN,iHAMJ+L,GAAgBC,EAAOC,OCnC/BE,I,mBCnBA7S,EAAOC,QAAU,CAAC,IAAM,iBAAiB,aAAe,4B,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,mBCAtDD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,eAAiB,+B,mBCAnED,EAAOC,QAAU,CAAC,oBAAsB,0CAA0C,YAAc,qC","file":"static/js/main.4016ca5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__xUZ6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"round\":\"Round_round__2PsI6\",\"roundActive\":\"Round_roundActive__IBnxp\",\"move-round-bar\":\"Round_move-round-bar__13KxS\",\"roundContainer\":\"Round_roundContainer__9X7I8\",\"roundWrapper\":\"Round_roundWrapper__flFGR\",\"roundComplete\":\"Round_roundComplete__1oSKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color\":\"Contestant_color__35zqH\",\"colorSign\":\"Contestant_colorSign___mA8H\",\"colorSignSecond\":\"Contestant_colorSignSecond__3IG6_\",\"colorText\":\"Contestant_colorText__2tPOf\",\"container\":\"Contestant_container__3vzkU\",\"contestant\":\"Contestant_contestant__WUN3L\",\"rank\":\"Contestant_rank__2LxCG\",\"rankchampion\":\"Contestant_rankchampion__2dmVC\",\"textWrapper\":\"Contestant_textWrapper__-PvhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"Clock_clock__1qt1j\",\"clockWrapper\":\"Clock_clockWrapper__2gdS5\",\"time\":\"Clock_time__2g9rp\",\"separator\":\"Clock_separator__3EQDT\"};","enum BOUTS {\r\n  STRAWWEIGHT = 'Strawweight Bout',\r\n  FLYWEIGHT = 'Flyweight Bout',\r\n  BANTAMWEIGHT = 'Bantamweight Bout',\r\n  FEATHERWEIGHT = 'Featherweight Bout',\r\n  LIGHTWEIGHT = 'Lightweight Bout',\r\n  WELTERWEIGHT = 'Welterweight Bout',\r\n  MIDDLEWEIGHT = 'Middleweight Bout',\r\n  LIGHT_HEAVYWEIGHT = 'Light Heavyweight Bout',\r\n  HEAVYWEIGHT = 'Heavyweight Bout',\r\n}\r\n\r\nexport default BOUTS;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","enum INFOTEXT {\r\n  TRUNK_COLOR = 'Trunk color',\r\n}\r\n\r\nexport default INFOTEXT;\r\n","export interface Color {\r\n  code: string;\r\n  name: string;\r\n  textColor: string;\r\n}\r\n\r\nexport interface Colors {\r\n  [color: string]: Color\r\n}\r\n\r\nconst COLORS: Colors = {\r\n  BLACK: {\r\n    code: '#131416',\r\n    name: 'Black',\r\n    textColor: '#fff',\r\n  },\r\n\r\n  BLUE: {\r\n    code: '#294790',\r\n    name: 'Blue',\r\n    textColor: '#fff',\r\n  },\r\n\r\n  GOLD: {\r\n    code: '#b5a772',\r\n    name: 'Gold',\r\n    textColor: '#000',\r\n  },\r\n\r\n  GREEN: {\r\n    code: '#207744',\r\n    name: 'Green',\r\n    textColor: '#fff',\r\n  },\r\n\r\n  RED: {\r\n    code: '#8f020e',\r\n    name: 'Red',\r\n    textColor: '#fff',\r\n  },\r\n\r\n  WHITE: {\r\n    code: '#f8f6f9',\r\n    name: 'White',\r\n    textColor: '#000',\r\n  },\r\n\r\n  YELLOW: {\r\n    code: '#e6d450',\r\n    name: 'Yellow',\r\n    textColor: '#000',\r\n  },\r\n} as const;\r\n\r\nexport default COLORS;\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { RootState } from '../../app/store';\r\n\r\nexport interface ClockState {\r\n  minutes: number\r\n}\r\n\r\nconst initialState: ClockState = {\r\n  minutes: 5,\r\n};\r\n\r\nexport const clockSlice = createSlice({\r\n  name: 'clock',\r\n  initialState,\r\n  reducers: {\r\n    setClockTime: (state, action: PayloadAction<number>) => {\r\n      state.minutes = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectClockTime = (state: RootState): number => state.clock.minutes;\r\n\r\nexport const { setClockTime } = clockSlice.actions;\r\n\r\nexport default clockSlice.reducer;\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { RootState } from '../../app/store';\r\nimport BOUTS from '../../constants/bouts';\r\nimport INFOTEXT from '../../constants/infoText';\r\n\r\nexport type InfoType = INFOTEXT | BOUTS;\r\nexport interface InfoState {\r\n  bout: BOUTS;\r\n  message: InfoType;\r\n}\r\n\r\nconst initialState: InfoState = {\r\n  bout: BOUTS.LIGHTWEIGHT,\r\n  message: INFOTEXT.TRUNK_COLOR,\r\n};\r\n\r\nexport const infoSlice = createSlice({\r\n  name: 'info',\r\n  initialState,\r\n  reducers: {\r\n    setBout: (state, action: PayloadAction<BOUTS>) => {\r\n      state.bout = action.payload;\r\n    },\r\n    setMessage: (state, action: PayloadAction<InfoType>) => {\r\n      state.message = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectBout = (state: RootState): BOUTS => state.info.bout;\r\nexport const selectMessage = (state: RootState): InfoType => state.info.message;\r\n\r\nexport const { setBout, setMessage } = infoSlice.actions;\r\n\r\nexport default infoSlice.reducer;\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { RootState } from '../../app/store';\r\nimport ROUNDS from '../../constants/rounds';\r\n\r\ntype Rounds = (typeof ROUNDS)[keyof typeof ROUNDS];\r\ntype StandardRounds = 1 | 2 | 3;\r\ntype ChampionshipRounds = 4 | 5;\r\ntype ActiveRound = StandardRounds | ChampionshipRounds;\r\n\r\nexport interface RoundCounterState {\r\n  rounds: Rounds;\r\n  activeRound: ActiveRound\r\n}\r\n\r\nconst initialState: RoundCounterState = {\r\n  rounds: 3,\r\n  activeRound: 2,\r\n};\r\n\r\nexport const roundCounterSlice = createSlice({\r\n  name: 'roundCounter',\r\n  initialState,\r\n  reducers: {\r\n    setActiveRound: (state, action: PayloadAction<RoundCounterState>) => {\r\n      state.activeRound = action.payload.activeRound;\r\n    },\r\n\r\n    setRoundsCount: (state, action: PayloadAction<RoundCounterState>) => {\r\n      state.rounds = action.payload.rounds;\r\n    },\r\n\r\n    setRoundCounter: (state, action: PayloadAction<RoundCounterState>) => {\r\n      state.activeRound = action.payload.activeRound;\r\n      state.rounds = action.payload.rounds;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectActiveRound = (state: RootState): ActiveRound => {\r\n  const { activeRound, rounds } = state.roundCounter;\r\n  return activeRound > rounds ? rounds : activeRound;\r\n};\r\n\r\nexport const selectRoundsCounter = (state: RootState): RoundCounterState => state.roundCounter;\r\nexport const selectRoundsCount = (state: RootState): Rounds => state.roundCounter.rounds;\r\n\r\nexport const { setActiveRound, setRoundsCount, setRoundCounter } = roundCounterSlice.actions;\r\n\r\nexport default roundCounterSlice.reducer;\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { RootState } from '../../app/store';\r\nimport COLORS, { Color } from '../../constants/colors';\r\n\r\nexport type ContestantType = {\r\n  champion: boolean;\r\n  color: Color;\r\n  id: number;\r\n  lastName: string;\r\n  rank: number\r\n};\r\n\r\nexport type ContestantsTuple = [ContestantType, ContestantType];\r\n\r\nexport type ContestantsColorsPayload = {\r\n  color: string,\r\n  targetIndex: number\r\n};\r\nexport interface TimerState {\r\n  contestants: ContestantsTuple;\r\n}\r\n\r\nconst initialState: TimerState = {\r\n  contestants: [\r\n    {\r\n      champion: false,\r\n      color: COLORS.RED,\r\n      id: 1,\r\n      lastName: 'Contender 1',\r\n      rank: 1,\r\n    },\r\n    {\r\n      champion: false,\r\n      color: COLORS.BLUE,\r\n      id: 2,\r\n      lastName: 'Contender 2',\r\n      rank: 4,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const timerSlice = createSlice({\r\n  name: 'timer',\r\n  initialState,\r\n  reducers: {\r\n    setContestantsColors: (state, action: PayloadAction<ContestantsColorsPayload>) => {\r\n      const colorEntries = Object.values(COLORS);\r\n      const chosenColor = colorEntries.find((color) => color.code === action.payload.color);\r\n      if (chosenColor !== undefined) {\r\n        state.contestants[action.payload.targetIndex].color = chosenColor;\r\n      }\r\n    },\r\n\r\n    updateContestants: (state, action: PayloadAction<ContestantsTuple>) => {\r\n      state.contestants = action.payload;\r\n    },\r\n  },\r\n\r\n});\r\n\r\nexport const selectContestants = (state: RootState): ContestantsTuple => state.timer.contestants;\r\n\r\nexport const { setContestantsColors, updateContestants } = timerSlice.actions;\r\n\r\nexport default timerSlice.reducer;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport {\r\n  CirclePicker, CirclePickerProps, ColorResult, CustomPicker,\r\n} from 'react-color';\r\n\r\ninterface CustomColorPickerProps extends CirclePickerProps {\r\n  index: number;\r\n}\r\n\r\nfunction CustomColorPicker({ index, ...props }: CustomColorPickerProps) {\r\n  return (\r\n    <div data-index={index}>\r\n      <CirclePicker {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomColorPicker;\r\n","import { updatedDiff } from 'deep-object-diff';\r\nimport { ColorResult } from 'react-color';\r\nimport DatGui, {\r\n  DatBoolean, DatFolder, DatNumber, DatSelect, DatString,\r\n} from 'react-dat-gui';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { RootState } from '../../app/store';\r\nimport BOUTS from '../../constants/bouts';\r\nimport COLORS from '../../constants/colors';\r\nimport { selectClockTime, setClockTime } from '../../features/clock/clockSlice';\r\nimport { selectBout, selectMessage, setBout } from '../../features/info/infoSlice';\r\nimport {\r\n  selectActiveRound, selectRoundsCount, setRoundCounter,\r\n} from '../../features/roundCounter/roundCounterSlice';\r\nimport {\r\n  ContestantType, selectContestants, setContestantsColors, updateContestants,\r\n} from '../../features/timer/timerSlice';\r\nimport CustomColorPicker from '../CustomColorPicker';\r\n\r\nimport 'react-dat-gui/dist/index.css';\r\nimport styles from './GUI.module.scss';\r\n\r\nfunction GUI(): JSX.Element {\r\n  const TARGET_INDEX_SELECTOR = '[data-index]';\r\n\r\n  const dispatch = useAppDispatch();\r\n  const bouts = Object.values(BOUTS);\r\n  const activeRound = useAppSelector(selectActiveRound);\r\n  const contestants = useAppSelector(selectContestants);\r\n  const currentBout = useAppSelector(selectBout);\r\n  const infoMessage = useAppSelector(selectMessage);\r\n  const roundsCount = useAppSelector(selectRoundsCount);\r\n  const roundTime = useAppSelector(selectClockTime);\r\n\r\n  const data: RootState = {\r\n    clock: { minutes: roundTime },\r\n    info: { bout: currentBout, message: infoMessage },\r\n    roundCounter: { activeRound, rounds: roundsCount },\r\n    timer: { contestants },\r\n  };\r\n\r\n  const colorEntries = Object.values(COLORS);\r\n  const colors = colorEntries.map((colorElement) => colorElement.code);\r\n  const cardStyles: React.CSSProperties = {\r\n    backgroundColor: '#fff2',\r\n    justifyContent: 'space-evenly',\r\n    margin: 0,\r\n    marginLeft: '-4px',\r\n    padding: '10px',\r\n    paddingLeft: 'auto',\r\n    paddingRight: 'auto',\r\n  };\r\n\r\n  const handleSwatchHover = (targetColor: ColorResult, event: MouseEvent) => {\r\n    const target = colorEntries.find((colorEl) => colorEl.code === targetColor.hex);\r\n    if (target !== undefined) {\r\n      const targetElement = event.target as HTMLDivElement;\r\n      if (targetElement.title !== target.name) targetElement.title = target.name;\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (color: ColorResult, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const parentTarget = event.target.closest(TARGET_INDEX_SELECTOR) as HTMLElement;\r\n    const targetIndex = parentTarget?.dataset.index;\r\n    if (targetIndex !== undefined) {\r\n      const parsedTargetIndex = parseInt(targetIndex, 10);\r\n      const payload = {\r\n        color: color.hex,\r\n        targetIndex: parsedTargetIndex,\r\n      };\r\n      console.log(payload);\r\n\r\n      dispatch(setContestantsColors(payload));\r\n    }\r\n  };\r\n\r\n  const generateContestantsFolders = ({ id }: ContestantType, index: number) => {\r\n    const conditionalRankElement = data.timer.contestants[index].champion === false\r\n      ? <DatNumber label=\"Rank\" path={`timer.contestants[${index}].rank`} min={1} max={15} step={1} />\r\n      : <></>;\r\n\r\n    return (\r\n      <DatFolder\r\n        closed={false}\r\n        key={id}\r\n        title={`Contender ${index + 1}`}\r\n      >\r\n        <DatString label=\"Name\" path={`timer.contestants[${index}].lastName`} />\r\n        <DatBoolean label=\"Champion\" path={`timer.contestants[${index}].champion`} />\r\n        {conditionalRankElement}\r\n        <DatFolder title=\"Trunk Color\" closed>\r\n          <CustomColorPicker\r\n            onSwatchHover={handleSwatchHover}\r\n            colors={colors}\r\n            className={styles.circlePicker}\r\n            circleSpacing={10}\r\n            circleSize={25}\r\n            index={index}\r\n            styles={{\r\n              default: {\r\n                card: cardStyles,\r\n              },\r\n            }}\r\n            width=\"104%\"\r\n            onChange={handleColorChange}\r\n          />\r\n        </DatFolder>\r\n      </DatFolder>\r\n    );\r\n  };\r\n\r\n  const handleUpdate = (newData: RootState) => {\r\n    const diffs = updatedDiff(data, newData);\r\n    console.log(diffs);\r\n    const [changedProperty] = Object.keys(diffs);\r\n    switch (changedProperty) {\r\n      case 'timer':\r\n        dispatch(updateContestants(newData.timer.contestants));\r\n        break;\r\n      case 'clock':\r\n        dispatch(setClockTime(newData.clock.minutes));\r\n        break;\r\n      case 'info':\r\n        dispatch(setBout(newData.info.bout));\r\n        break;\r\n      case 'roundCounter':\r\n        dispatch(setRoundCounter(newData.roundCounter));\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DatGui className={styles.gui} data={data} labelWidth=\"40%\" onUpdate={handleUpdate} style={{ zIndex: 100 }}>\r\n      {contestants.map(generateContestantsFolders)}\r\n\r\n      <DatFolder title=\"Fight options\" closed={false}>\r\n        <DatNumber label=\"Round time (min)\" path=\"clock.minutes\" min={1} max={5} step={1} />\r\n        <DatNumber label=\"Rounds\" path=\"roundCounter.rounds\" min={1} max={5} step={1} />\r\n        <DatNumber label=\"Actual Round\" path=\"roundCounter.activeRound\" min={1} max={roundsCount} step={1} />\r\n        <DatSelect label=\"Category\" path=\"info.bout\" options={bouts} />\r\n      </DatFolder>\r\n    </DatGui>\r\n  );\r\n}\r\n\r\nexport default GUI;\r\n","import gsap from 'gsap';\r\nimport { useCallback, useEffect, useRef } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\r\nimport {\r\n  InfoType, selectBout, selectMessage, setMessage,\r\n} from './infoSlice';\r\nimport BOUTS from '../../constants/bouts';\r\nimport INFOTEXT from '../../constants/infoText';\r\nimport styles from './Info.module.scss';\r\n\r\ninterface CustomTimelineParams {\r\n  id: string;\r\n  duration: number;\r\n  text: InfoType\r\n}\r\n\r\nfunction Info(): JSX.Element {\r\n  const dispatch = useAppDispatch();\r\n  const currentBout = useAppSelector(selectBout);\r\n  const infoMessage = useAppSelector(selectMessage);\r\n  const refInfoBox = useRef<HTMLDivElement>(null);\r\n  const refInfoText = useRef<HTMLSpanElement>(null);\r\n\r\n  const timelineOptions: gsap.TimelineVars = {\r\n    defaults: {\r\n      duration: '0.4',\r\n      ease: 'power1.inOut',\r\n    },\r\n  };\r\n\r\n  const createTl = useCallback(({\r\n    duration, id, text,\r\n  }: CustomTimelineParams) => {\r\n    const tl = gsap.timeline({ id, ...timelineOptions });\r\n\r\n    if (Object.values(BOUTS).includes(text as BOUTS)) {\r\n      tl.set(refInfoBox.current, { width: 'fit-content' });\r\n    }\r\n\r\n    tl\r\n      .fromTo(refInfoBox.current, { rotateX: '90' }, { rotateX: '0' })\r\n      .fromTo(refInfoText.current, { y: '200%' }, { y: '0' })\r\n      .to(refInfoBox.current, { rotateX: '90' }, `+=${duration}`)\r\n      .to(refInfoText.current, { y: '200%', duration: '0.4' }, '<')\r\n      .eventCallback('onStart', () => {\r\n        if (infoMessage !== text) {\r\n          dispatch(setMessage(text));\r\n        }\r\n      });\r\n\r\n    return tl;\r\n  }, [refInfoBox, refInfoText]);\r\n\r\n  const showTrunkInfo = useCallback((duration: number) => {\r\n    const tl = createTl({ duration, id: 'showTrunkInfo', text: INFOTEXT.TRUNK_COLOR });\r\n\r\n    return tl;\r\n  }, [refInfoBox, refInfoText]);\r\n\r\n  const showBoutInfo = useCallback((duration: number) => {\r\n    const tl = createTl({ duration, id: 'showBoutInfo', text: currentBout });\r\n\r\n    return tl;\r\n  }, [refInfoBox, refInfoText]);\r\n\r\n  useEffect(() => {\r\n    showTrunkInfo(2);\r\n    showBoutInfo(4);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.infoBox} ref={refInfoBox}>\r\n      <span className={styles.info} ref={refInfoText}>{infoMessage}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUfcLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"ufc-logo\",\n    viewBox: \"0 0 341 119\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M89.9.7h39.7s-26.4 94.3-27.7 99.4c-2.5 9.8-5 18.7-29 18.7-28.9 0-45.7-.1-53.6 0-9.9.1-21.6-9-18.4-20.8L28 .7h40.5S45.8 81.8 45.3 83.9c-.4 2.1-2.7 7.9 9.9 8 9.1.2 9.8-2.2 11.4-8C70.4 70.8 89.9.7 89.9.7zm145.8 0l-7.2 25.9h-86.4L149.3.7h86.4zM116.4 118.8l20.7-74.5h86.4l-7.2 25.9H170l-13.5 48.6h-40.1zm162.8-76.5c-3.7 13.6-7 25.2-10.7 38.9-.7 2.4-2.3 5.9-1.8 8.1 1.1 5.2 18.3 3.2 24.5 3.2h27.6c-2.2 8.7-4.7 17.2-7.1 25.7H246c-9.6-.9-22.1-5-20.9-17.4.4-3.9 2.2-8.3 3.4-12.6 5.9-21.1 11.9-42.7 17.6-63.4 2.5-9.2 4.5-17 11.8-20.7 4.7-2.4 12.2-3.1 17.8-3.4H341c-2.3 8.6-4.7 17.2-7.1 25.7h-37.5c-4.5 0-9.5-.5-12 1.2-2.7 2-4.2 11-5.2 14.7z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUfcLogo);\nexport default __webpack_public_path__ + \"static/media/ufc-logo.263757a6.svg\";\nexport { ForwardRef as ReactComponent };","import { useCallback, useEffect, useRef } from 'react';\r\nimport gsap from 'gsap';\r\nimport { ReactComponent as UFCLogo } from '../../assets/ufc-logo.svg';\r\n\r\nimport styles from './Logo.module.scss';\r\n\r\nfunction Logo(): JSX.Element {\r\n  const refLogo = useRef<SVGSVGElement>(null);\r\n  const refLogokWrapper = useRef<HTMLDivElement>(null);\r\n\r\n  const showLogo = useCallback(\r\n    () => {\r\n      const tl = gsap.timeline({\r\n        defaults: {\r\n          duration: '0.3',\r\n          ease: 'power1.inOut',\r\n        },\r\n        id: 'showLogo',\r\n      });\r\n\r\n      tl\r\n        .fromTo(refLogo.current, { y: '-100%' }, { y: '0%' });\r\n    },\r\n    [refLogo],\r\n  );\r\n\r\n  const hideLogoWrapperBackground = useCallback(\r\n    () => {\r\n      const tl = gsap.timeline({\r\n        defaults: {\r\n          duration: '0.1',\r\n        },\r\n        id: 'hideLogoWrapperBackground',\r\n      });\r\n\r\n      tl\r\n        .set(refLogokWrapper.current, {\r\n          backgroundImage: 'none', left: '50%', width: '100%', x: '-50%',\r\n        });\r\n    },\r\n    [refLogokWrapper],\r\n  );\r\n\r\n  const showLogoWrapperBackground = useCallback(\r\n    () => {\r\n      const tl = gsap.timeline({\r\n        defaults: {\r\n          duration: '0.4',\r\n        },\r\n        id: 'showLogoWrapperBackground',\r\n      });\r\n\r\n      tl\r\n        .set(refLogokWrapper.current, { clearProps: 'backgroundImage' })\r\n        .fromTo(refLogokWrapper.current, { width: '100%' }, { left: '0', width: refLogo.current?.clientWidth, x: '0' }, '+=0.5');\r\n    },\r\n    [refLogokWrapper],\r\n  );\r\n\r\n  useEffect(() => {\r\n    showLogo();\r\n    hideLogoWrapperBackground();\r\n    showLogoWrapperBackground();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.ufcLogoWrapper} ref={refLogokWrapper}>\r\n      <UFCLogo className={styles.ufcLogo} ref={refLogo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import gsap from 'gsap';\r\nimport { useCallback, useEffect, useRef } from 'react';\r\n\r\nimport { readFile } from 'node:fs';\r\nimport { selectActiveRound, selectRoundsCounter } from '../../features/roundCounter/roundCounterSlice';\r\nimport { useAppSelector } from '../../app/hooks';\r\n\r\nimport styles from './Round.module.scss';\r\n\r\nfunction Round(): JSX.Element {\r\n  const { rounds } = useAppSelector(selectRoundsCounter);\r\n  const activeRound = useAppSelector(selectActiveRound);\r\n  const roundsArr: JSX.Element[] = [];\r\n  const refRoundContainer = useRef<HTMLDivElement>(null);\r\n\r\n  const showRounds = useCallback(() => {\r\n    const { current: roundContainerEl } = refRoundContainer;\r\n    const roundsWrapperEl = roundContainerEl?.getElementsByClassName(styles.roundWrapper);\r\n    const roundsEl = roundContainerEl?.getElementsByClassName(styles.round);\r\n    const activeRoundEl = roundContainerEl?.getElementsByClassName(styles.roundActive);\r\n    const completedRounds = roundContainerEl?.getElementsByClassName(styles.roundComplete) ?? [];\r\n\r\n    const tl = gsap.timeline({\r\n      defaults: {\r\n        duration: '0.4',\r\n        ease: 'power1.out',\r\n      },\r\n      id: 'showRounds',\r\n    });\r\n\r\n    if (roundsWrapperEl !== undefined && roundsEl !== undefined && activeRoundEl !== undefined) {\r\n      tl\r\n        .set(roundContainerEl, {\r\n          bottom: '100%', y: '100%', height: '120%', rotateX: '90deg', transformOrigin: 'center 0',\r\n        })\r\n        .fromTo(roundContainerEl, { filter: 'blur(0px)' }, { filter: 'blur(0px)' })\r\n        .to(roundContainerEl, { rotateX: '0deg' }, '<')\r\n        .fromTo(roundContainerEl, { autoAlpha: 0 }, { autoAlpha: 1 }, '<')\r\n        .to(roundContainerEl, { bottom: '-20%', y: '0%' }, '<')\r\n        .to(roundContainerEl, { height: '5' }, '-=0.2')\r\n        .fromTo(roundsWrapperEl, { height: '100%' }, { height: '5' }, '<')\r\n        .fromTo(completedRounds, { backgroundColor: 'transparent' }, { backgroundColor: '#fff', backgroundImage: 'linear-gradient(transparent 0%, transparent 100%)' })\r\n        .to(activeRoundEl, { backgroundImage: 'linear-gradient(to right, #fff 50%, #2b2b2b 50%, #2b2b2b 100%)' }, '<')\r\n        .set(activeRoundEl, { duration: 0.15, ease: 'none' })\r\n        .to(activeRoundEl, { autoAlpha: 0, duration: 0.15 }, '<')\r\n        .to(activeRoundEl, { autoAlpha: 1, duration: 0.15 })\r\n        .to(activeRoundEl, { autoAlpha: 0, duration: 0.15 })\r\n        .to(activeRoundEl, { autoAlpha: 1, duration: 0.15 });\r\n    }\r\n  }, [refRoundContainer]);\r\n\r\n  useEffect(() => {\r\n    showRounds();\r\n  }, [refRoundContainer]);\r\n\r\n  for (let i = 1; i < rounds + 1; i += 1) {\r\n    const isRoundCompletedModifier = i < activeRound ? ` ${styles.roundComplete}` : '';\r\n    const roundModifier = activeRound === i ? ` ${styles.roundActive}` : isRoundCompletedModifier;\r\n    const roundJSX = (\r\n      <div className={styles.roundWrapper} key={i}>\r\n        <span className={`${styles.round}${roundModifier}`} />\r\n      </div>\r\n    );\r\n    roundsArr.push(roundJSX);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.roundContainer} ref={refRoundContainer}>\r\n      {roundsArr}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Round;\r\n","import gsap from 'gsap';\r\nimport { useCallback, useEffect, useRef } from 'react';\r\n\r\nimport { selectRoundsCounter } from './roundCounterSlice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport Round from '../../components/Round';\r\n\r\nimport styles from './RoundCounter.module.scss';\r\n\r\nfunction RoundCounter(): JSX.Element {\r\n  const { activeRound, rounds } = useAppSelector(selectRoundsCounter);\r\n  const activeRoundLabel = `Round ${activeRound > rounds ? rounds : activeRound}`;\r\n  const refRoundNumber = useRef<HTMLSpanElement>(null);\r\n\r\n  const showCurrentRound = useCallback(\r\n    () => {\r\n      const tl = gsap.timeline({\r\n        defaults: {\r\n          duration: '0.15',\r\n        },\r\n        id: 'showCurrentRound',\r\n      });\r\n\r\n      tl\r\n        .to(refRoundNumber.current, { duration: '0.3', ease: 'power1.inOut', y: '0%' })\r\n        .to(refRoundNumber.current, { autoAlpha: 0 }, '+=0.3')\r\n        .to(refRoundNumber.current, { autoAlpha: 1 })\r\n        .to(refRoundNumber.current, { autoAlpha: 0 })\r\n        .to(refRoundNumber.current, { autoAlpha: 1 })\r\n        .to(refRoundNumber.current, { duration: '0.3', ease: 'power2.inOut', y: '100%' }, '+=0.4');\r\n    },\r\n    [refRoundNumber],\r\n  );\r\n\r\n  useEffect(() => {\r\n    showCurrentRound();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.roundCounterWrapper}>\r\n        <span className={styles.roundNumber} ref={refRoundNumber}>\r\n          {activeRoundLabel}\r\n        </span>\r\n      </div>\r\n      <Round />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RoundCounter;\r\n","import {\r\n  useCallback, useEffect, useRef,\r\n} from 'react';\r\nimport gsap from 'gsap';\r\nimport Countdown, { zeroPad } from 'react-countdown';\r\n\r\nimport Info from '../info/Info';\r\nimport Logo from '../../components/Logo';\r\nimport RoundCounter from '../roundCounter';\r\n\r\nimport styles from './Clock.module.scss';\r\n\r\ninterface RendererProps {\r\n  minutes: number;\r\n  seconds: number;\r\n}\r\n\r\nfunction Clock(): JSX.Element {\r\n  const refClock = useRef<HTMLDivElement>(null);\r\n  const refCountdown = useRef<HTMLSpanElement>(null);\r\n\r\n  const showClock = useCallback(\r\n    () => {\r\n      const tl = gsap.timeline({\r\n        defaults: {\r\n          duration: '0.4',\r\n          ease: 'power1.inOut',\r\n        },\r\n        id: 'showClock',\r\n      });\r\n      tl\r\n        .set(refClock.current, { height: '200%' })\r\n        .fromTo(refClock.current, { rotateX: '90deg', y: '200%' }, { ease: 'power2.in', rotateX: '0deg', y: '25%' })\r\n        .to(refClock.current, { height: '100%', y: '0%' }, '>');\r\n    },\r\n    [refClock],\r\n  );\r\n\r\n  const showCountdown = useCallback(\r\n    () => {\r\n      const tl = gsap.timeline({\r\n        defaults: {\r\n          duration: '0.4',\r\n          ease: 'power1.inOut',\r\n        },\r\n        id: 'showCountdown',\r\n      });\r\n      tl\r\n        .fromTo(refCountdown.current, { autoAlpha: 0 }, { autoAlpha: 1, duration: '0.1' })\r\n        .fromTo(refCountdown.current, { x: '-65%' }, { x: '0' });\r\n    },\r\n    [refCountdown],\r\n  );\r\n\r\n  const renderer = useCallback(\r\n    (props: RendererProps) => (\r\n      <>\r\n        <span className={styles.time} ref={refCountdown}>\r\n          <span className={styles.minutes}>{zeroPad(props.minutes, 1)}</span>\r\n          <span className={styles.separator}>:</span>\r\n          <span className={styles.seconds}>{zeroPad(props.seconds, 2)}</span>\r\n        </span>\r\n      </>\r\n    ),\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    showClock();\r\n    showCountdown();\r\n  }, [refClock]);\r\n\r\n  return (\r\n    <div className={styles.clock} ref={refClock}>\r\n      <Info />\r\n      <div className={styles.clockWrapper}>\r\n        <Logo />\r\n        <Countdown\r\n          date={Date.now() + 5 * 60 * 1000}\r\n          renderer={renderer}\r\n        />\r\n      </div>\r\n      <RoundCounter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Clock;\r\n","import { useAppSelector } from '../../app/hooks';\r\nimport { ContestantType, selectContestants } from '../../features/timer/timerSlice';\r\n\r\nimport styles from './Contestant.module.scss';\r\n\r\ntype ContestantModifier = {\r\n  isSecond: boolean\r\n};\r\n\r\ntype ContestantRefs = {\r\n  refContestant: React.RefObject<HTMLDivElement>\r\n  refColor: React.RefObject<HTMLDivElement>\r\n  refColorSign: React.RefObject<HTMLSpanElement>\r\n  refColorText: React.RefObject<HTMLSpanElement>\r\n  refText: React.RefObject<HTMLDivElement>\r\n  refTextBlock: React.RefObject<HTMLDivElement>\r\n};\r\n\r\ntype ContestantProps = ContestantModifier & ContestantRefs & Pick<ContestantType, 'id'>;\r\n\r\nfunction Contestant({\r\n  id,\r\n  isSecond,\r\n  refContestant,\r\n  refColor,\r\n  refColorSign,\r\n  refColorText,\r\n  refText,\r\n  refTextBlock,\r\n}: ContestantProps): JSX.Element {\r\n  const contestants = useAppSelector(selectContestants);\r\n  const properContestant = contestants.find((contestant) => contestant.id === id);\r\n\r\n  const {\r\n    champion, color: { code, name, textColor: text }, lastName, rank,\r\n  } = properContestant as ContestantType;\r\n\r\n  const textStyles = { color: text };\r\n  const colorBlockStyles = { backgroundColor: code };\r\n\r\n  const modifierClass = isSecond ? ` ${styles.colorSignSecond}` : '';\r\n  const ranking = champion ? 'C' : rank;\r\n  return (\r\n    <div className={styles.contestant} ref={refContestant}>\r\n      <div className={styles.container} ref={refTextBlock}>\r\n        <div className={styles.textWrapper} ref={refText}>\r\n          <span className={styles.rank}>{ranking}</span>\r\n          <span className={styles.name}>{lastName}</span>\r\n        </div>\r\n        <span className={`${styles.colorSign}${modifierClass}`} ref={refColorSign} style={colorBlockStyles} />\r\n      </div>\r\n      <div className={styles.color} ref={refColor} style={colorBlockStyles}>\r\n        <span\r\n          className={styles.colorText}\r\n          ref={refColorText}\r\n          style={textStyles}\r\n        >\r\n          {name}\r\n\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contestant;\r\n","import gsap from 'gsap';\r\nimport { useEffect, useRef } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\r\nimport { selectContestants } from './timerSlice';\r\nimport { setMessage } from '../info/infoSlice';\r\n\r\nimport Clock from '../clock';\r\nimport Contestant from '../../components/Contestant';\r\n\r\nimport styles from './Timer.module.scss';\r\n\r\nfunction Timer(): JSX.Element {\r\n  const contestants = useAppSelector(selectContestants);\r\n  const dispatch = useAppDispatch();\r\n  const timer = useRef<HTMLDivElement>(null);\r\n\r\n  const firstContestant = useRef<HTMLDivElement>(null);\r\n  const firstContestantColor = useRef<HTMLDivElement>(null);\r\n  const firstContestantColorSign = useRef<HTMLSpanElement>(null);\r\n  const firstContestantColorText = useRef<HTMLSpanElement>(null);\r\n  const firstContestantText = useRef<HTMLDivElement>(null);\r\n  const firstContestantTextBlock = useRef<HTMLDivElement>(null);\r\n\r\n  const secondContestant = useRef<HTMLDivElement>(null);\r\n  const secondContestantColor = useRef<HTMLDivElement>(null);\r\n  const secondContestantColorSign = useRef<HTMLSpanElement>(null);\r\n  const secondContestantColorText = useRef<HTMLSpanElement>(null);\r\n  const secondContestantText = useRef<HTMLDivElement>(null);\r\n  const secondContestantTextBlock = useRef<HTMLDivElement>(null);\r\n\r\n  const blink = () => {\r\n    const tl = gsap.timeline({ defaults: { duration: '0.6' } });\r\n    tl\r\n      .addLabel('blinking')\r\n      .to([firstContestantColorSign.current, secondContestantColorSign.current], { autoAlpha: '0', duration: '0.07' }, 'blinking')\r\n      .to([firstContestantColorSign.current, secondContestantColorSign.current], { autoAlpha: '1', duration: '0.07' })\r\n      .to([firstContestantColorSign.current, secondContestantColorSign.current], { autoAlpha: '0', duration: '0.07' })\r\n      .to([firstContestantColorSign.current, secondContestantColorSign.current], { autoAlpha: '1', duration: '0.07' });\r\n\r\n    return tl;\r\n  };\r\n\r\n  const showContestants = () => {\r\n    const tl = gsap.timeline({ defaults: { duration: '0.6' } })\r\n      // move in contestant names\r\n      .fromTo(firstContestantTextBlock.current, { padding: '0', width: '0' }, { padding: '0 1.5em', width: '250' })\r\n      .fromTo(secondContestantTextBlock.current, { padding: '0', width: '0' }, { padding: '0 1.5em', width: '250' }, '-=0.6')\r\n      // move in color signs\r\n      .fromTo(firstContestantColorSign.current, { width: '8', x: '-250' }, {\r\n        duration: '0.4',\r\n        ease: 'expo.out',\r\n        width: '100%',\r\n        x: '0',\r\n      })\r\n      .to(firstContestantColorSign.current, { duration: '0.4', width: '8' })\r\n      .fromTo(secondContestantColorSign.current, { width: '8', x: '250' }, {\r\n        duration: '0.4',\r\n        ease: 'expo.out',\r\n        width: '100%',\r\n        x: '0',\r\n      }, '-=0.8')\r\n      .to(secondContestantColorSign.current, { duration: '0.4', width: '8' }, '-=0.4')\r\n      // meanwhile, show contestants' names\r\n      .fromTo(firstContestantText.current, { autoAlpha: '0' }, { duration: '0.1', autoAlpha: '1' }, '-=0.4')\r\n      .fromTo(firstContestantText.current, { x: '-5%' }, { ease: 'power1.out', duration: '0.8', x: '0%' }, '-=0.4')\r\n      .fromTo(secondContestantText.current, { autoAlpha: '0' }, { duration: '0.1', autoAlpha: '1' }, '-=0.8')\r\n      .fromTo(secondContestantText.current, { x: '5%' }, { ease: 'power1.out', duration: '0.8', x: '0%' }, '-=0.8');\r\n    return tl;\r\n  };\r\n\r\n  const hideTrunkColors = () => {\r\n    const tl = gsap.timeline({ defaults: { duration: '0.4', ease: 'power1.inOut' } });\r\n    tl\r\n      .addLabel('hideColors')\r\n      .to(firstContestantColorText.current, { x: '200%' }, 'hideColors')\r\n      .to(firstContestantColor.current, { x: '100%' }, 'hideColors+=0.2')\r\n      .to(firstContestantColorSign.current, { width: '8', x: '150' }, 'hideColors+=0.2')\r\n      .to(firstContestantColor.current, { width: '0' }, 'hideColors+=0.4')\r\n      .to(firstContestantColorSign.current, { x: '0' }, 'hideColors+=0.4')\r\n\r\n      .to(secondContestantColorText.current, { x: '-200%' }, 'hideColors')\r\n      .to(secondContestantColor.current, { x: '-100%' }, 'hideColors+=0.2')\r\n      .to(secondContestantColorSign.current, { width: '8', x: '-150' }, 'hideColors+=0.2')\r\n      .to(secondContestantColor.current, { width: '0' }, 'hideColors+=0.4')\r\n      .to(secondContestantColorSign.current, { x: '0' }, 'hideColors+=0.4');\r\n\r\n    return tl;\r\n  };\r\n\r\n  const showTrunkColors = () => {\r\n    const tl = gsap.timeline({ defaults: { duration: '0.6' } });\r\n    tl\r\n      .addLabel('showColors')\r\n      .to(firstContestantColorSign.current, { duration: '0.2', width: '158', x: '150' }, 'showColors')\r\n      .fromTo(firstContestantColor.current, { width: '0', x: '100%' }, { duration: '0.4', ease: 'power1.inOut', width: '150' }, 'showColors+=0.4')\r\n      .to(firstContestantColor.current, { duration: '0.4', x: '0' }, 'showColors+=0.8')\r\n      .fromTo(firstContestantColorText.current, { x: '100%' }, { duration: '0.4', ease: 'power1.inOut', x: '0' }, 'showColors+=1')\r\n      .to(secondContestantColorSign.current, { duration: '0.2', width: '158', x: '-150' }, 'showColors')\r\n      .fromTo(secondContestantColor.current, { width: '0', x: '-100%' }, { duration: '0.4', ease: 'power1.inOut', width: '150' }, 'showColors+=0.4')\r\n      .to(secondContestantColor.current, { duration: '0.4', x: '0' }, 'showColors+=0.8')\r\n      .fromTo(secondContestantColorText.current, { x: '-100%' }, { duration: '0.4', ease: 'power1.inOut', x: '0' }, 'showColors+=1');\r\n\r\n    return tl;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const master = gsap.timeline({\r\n      defaults: { duration: 0.6 },\r\n      id: 'master',\r\n      // paused: true,\r\n    });\r\n\r\n    const hideLogoWrapperBackground = gsap.getById('hideLogoWrapperBackground');\r\n    const showBoutInfo = gsap.getById('showBoutInfo');\r\n    const showCountdown = gsap.getById('showCountdown');\r\n    const showClock = gsap.getById('showClock');\r\n    const showCurrentRound = gsap.getById('showCurrentRound');\r\n    const showLogo = gsap.getById('showLogo');\r\n    const showLogoWrapperBackground = gsap.getById('showLogoWrapperBackground');\r\n    const showRounds = gsap.getById('showRounds');\r\n    const showTrunkInfo = gsap.getById('showTrunkInfo');\r\n\r\n    master\r\n      .add(showClock)\r\n      .add(showRounds, '<+0.5')\r\n      .add(showCurrentRound, 'showCurrentRound-=1.2')\r\n      .add(hideLogoWrapperBackground, '<-0.1')\r\n      .add(showLogo, 'showCurrentRound+=0.55')\r\n      .add(showContestants(), '<')\r\n      .add(showLogoWrapperBackground, '<')\r\n      .add(showCountdown, '>-0.5')\r\n      .add(blink(), 'blink+=0.5')\r\n      .add(showTrunkColors(), 'showTrunkColors')\r\n      .add(showTrunkInfo, '<+1')\r\n      .add(hideTrunkColors(), 'hideTrunkColors-=0.4')\r\n      .add(showBoutInfo);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.timer} ref={timer}>\r\n        <Clock />\r\n        {contestants.map(\r\n          ({ id }, index) => (\r\n            <Contestant\r\n              id={id}\r\n              key={id}\r\n              isSecond={index > 0}\r\n              refContestant={index > 0 ? secondContestant : firstContestant}\r\n              refColor={index > 0 ? secondContestantColor : firstContestantColor}\r\n              refColorSign={index > 0 ? secondContestantColorSign : firstContestantColorSign}\r\n              refColorText={index > 0 ? secondContestantColorText : firstContestantColorText}\r\n              refText={index > 0 ? secondContestantText : firstContestantText}\r\n              refTextBlock={index > 0 ? secondContestantTextBlock : firstContestantTextBlock}\r\n            />\r\n          ),\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import GUI from './components/GUI/GUI';\r\n\r\nimport Timer from './features/timer/Timer';\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <div className=\"App\">\r\n      <Timer />\r\n      <GUI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport clockReducer from '../features/clock/clockSlice';\r\nimport infoReducer from '../features/info/infoSlice';\r\nimport roundCounter from '../features/roundCounter/roundCounterSlice';\r\nimport timerReducer from '../features/timer/timerSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    clock: clockReducer,\r\n    info: infoReducer,\r\n    roundCounter: roundCounter,\r\n    timer: timerReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\nReturnType,\r\nRootState,\r\nunknown,\r\nAction<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gui\":\"GUI_gui__3pTGn\",\"circlePicker\":\"GUI_circlePicker__10Rgn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__3HSPN\",\"infoBox\":\"Info_infoBox__2n3Kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ufcLogo\":\"Logo_ufcLogo__1hhXm\",\"ufcLogoWrapper\":\"Logo_ufcLogoWrapper__Hwj87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roundCounterWrapper\":\"RoundCounter_roundCounterWrapper__2itGN\",\"roundNumber\":\"RoundCounter_roundNumber__3ECLo\"};"],"sourceRoot":""}